#!/bin/sh -f
# **************************************************************************
#  Tool Gear (www.llnl.gov/CASC/tool_gear)
#  Version 2.00                                               March 29, 2006
#  Please see COPYRIGHT AND LICENSE information at the end of this file.
# **************************************************************************

# To skip Qt version test (i.e., if this script is not detecting Qt version
# properly), just uncomment exit 0 below
# exit 0

# Make sure QTDIR is set first, required by qmake to compile code
if [ "$QTDIR" = "" ]; then
    echo "*********************** Error during check of Qt version! *****************"
    echo " "
    echo "    Tool-Gear-based tools expect Qt 3.3.1 or later to be installed."
    echo "    Qt requires QTDIR to be set and Qt's bin directory in your path."
    echo "    On some platforms, Qt also wants LD_LIBRARY_PATH set (not checked)."
    echo " "
    echo "    The environment variable QTDIR not set, so this Qt check failed!"
    echo " "
    echo "    Note: Tool Gear is not compatible with Qt 4 (since Qt 4 has new API)."
    echo "          Qt's website: www.trolltech.com"
    echo " "
    echo "***************************************************************************"
    echo " "
    exit 1;

fi


QMAKE_EXISTS=`qmake -query QMAKE_VERSION 2>&1`
QMAKE_RET="$?"
if [ "$QMAKE_RET" -ne "0" ] ; then
    echo "*********************** Error during check of Qt version! *****************"
    echo " "
    echo "    Tool-Gear-based tools expect Qt 3.3.1 or later to be installed."
    echo "    Qt requires QTDIR to be set and Qt's bin directory in your path."
    echo "    On some platforms, Qt also wants LD_LIBRARY_PATH set (not checked)."
    echo " "
    echo "    This message was return calling qmake (Qt's makefile tool):"
    echo "      ${QMAKE_EXISTS}"
    echo " "
    echo "    Note: Tool Gear is not compatible with Qt 4 (since Qt 4 has new API)."
    echo "          Qt's website: www.trolltech.com"
    echo " "
    echo "***************************************************************************"
    echo " "
    exit 1;
fi

QMAKE_VERSION=`qmake -v 2>&1`
#echo "version ${QMAKE_VERSION}"

# Grab token after (qt
FOLLOWS_QT=0
VERSION_TOKEN=""
for token in ${QMAKE_VERSION}
do
  case ${token} in
      # Indicate (Qt found, next token should be version
      \(Qt) 
          FOLLOWS_QT=1;;

      *\))
      if [ "$FOLLOWS_QT" -eq "1" ]; then
	  VERSION_TOKEN="${token}";
      else
          echo "Warning: Unexpected ')' in qmake output in '${token}'";
      fi
      FOLLOWS_QT=0;;

      # Next token doesn't follow (Qt
      *)
         FOLLOWS_QT=0;;
  esac
done

# Warn user if parse of qmake -v output fails
if [ "${VERSION_TOKEN}" = "" ]; then
    echo "*********************** Error during check of Qt version! *****************"
    echo " "
    echo "    Tool-Gear-based tools expect Qt 3.3.1 or later to be installed."
    echo "    Qt requires QTDIR to be set and Qt's bin directory in your path."
    echo "    On some platforms, Qt also wants LD_LIBRARY_PATH set (not checked)."
    echo "    Note: Tool Gear is not compatible with Qt 4 (since Qt 4 has new API)."
    echo " "
    echo "    Unable to extract Qt version from qmake -v output (Qt's makefile tool):"
    echo " "
    echo "${QMAKE_VERSION}"
    echo " "
    echo "    Qt's website: www.trolltech.com"
    echo " "
    echo "    Note: If Qt's version is actually compatible, modify Utils/checkQtVersion"
    echo "          to uncomment the 'exit 0' at the beginning of the script to skip"
    echo "          the Qt version test."
    echo " "
    echo "***************************************************************************"
    echo " "
    exit 1;
fi

# What does the version token look like now
#echo "Unparsed version token is '${VERSION_TOKEN}'"

# Strip off trailing ) from Qt version token
QT_VERSION=`echo $VERSION_TOKEN | awk -F\) '{print $1}'`

# What Qt version do we have
#echo "Qt version '$QT_VERSION' detected"

# Parse version Qt version into major.minor.sub
MAJOR_VERSION=`echo $QT_VERSION | awk -F\. '{print $1}'`
MINOR_VERSION=`echo $QT_VERSION | awk -F\. '{print $2}'`
SUB_VERSION=`echo $QT_VERSION | awk -F\. '{print $3}'`

# Did we parse things correctly.
#echo "Version $MAJOR_VERSION . $MINOR_VERSION . $SUB_VERSION"

# Assume compatible, set to 0 if not compatible
QT_COMPATIBLE=1;

# Must have major version of 3 to work with Tool Gear
if [ "${MAJOR_VERSION}" != "3" ] ; then
   QT_COMPATIBLE=0;

# Must have minor version of at least 3 to work with Tool Gear
elif [ "${MINOR_VERSION}" -lt "3" ] ; then
   QT_COMPATIBLE=0;

# Must have sub version of at least 1 if minor version is 3
elif [ "${MINOR_VERSION}" = "3" -a "${SUB_VERSION}" = "0" ] ; then
   QT_COMPATIBLE=0;
fi

#echo "QT_COMPATIBLE = $QT_COMPATIBLE"

# Do we have a compatible Qt version?
if [ "$QT_COMPATIBLE" = "1" ]; then
    echo "-----------------------------------------------------------"
    echo "Checking Qt... compatible Qt version ($QT_VERSION) found in path!"
    echo "-----------------------------------------------------------"
    # Return 0, Qt passed check
    exit 0;

else
    echo "Incompatible Qt version ($QT_VERSION) found in path!"
    echo "*********************** Error during check of Qt version! *****************"
    echo " "
    echo "    Tool-Gear-based tools expect Qt 3.3.1 or later to be installed."
    echo "    Qt requires QTDIR to be set and Qt's bin directory in your path."
    echo "    On some platforms, Qt also wants LD_LIBRARY_PATH set (not checked)."
    echo "    Note: Tool Gear is not compatible with Qt 4 (since Qt 4 has new API)."
    echo " "
    echo "    Qt version ($QT_VERSION) not between 3.3.1 and 3.9.9 in qmake -v output:"
    echo " "
    echo "${QMAKE_VERSION}"
    echo " "
    echo "    Qt's website: www.trolltech.com"
    echo " "
    echo "    Note: If Qt's version is actually compatible, modify Utils/checkQtVersion"
    echo "          to uncomment the 'exit 0' at the beginning of the script to skip"
    echo "          the Qt version test."
    echo " "
    echo "***************************************************************************"
    echo " "
    exit 1;
fi

# Should not get here, return 1 (fail)
exit 1;

################################################################################
# COPYRIGHT AND LICENSE
# 
# Copyright (c) 2006, The Regents of the University of California.
# Produced at the Lawrence Livermore National Laboratory
# Written by John Gyllenhaal (gyllen@llnl.gov), John May (johnmay@llnl.gov),
# and Martin Schulz (schulz6@llnl.gov).
# UCRL-CODE-220834.
# All rights reserved.
# 
# This file is part of Tool Gear.  For details, see www.llnl.gov/CASC/tool_gear.
# 
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
# 
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the disclaimer below.
# 
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the disclaimer (as noted below) in
#   the documentation and/or other materials provided with the distribution.
# 
# * Neither the name of the UC/LLNL nor the names of its contributors may
#   be used to endorse or promote products derived from this software without
#   specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OF THE UNIVERSITY 
# OF CALIFORNIA, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE 
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR 
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# ADDITIONAL BSD NOTICE
# 
# 1. This notice is required to be provided under our contract with the 
#    U.S. Department of Energy (DOE). This work was produced at the 
#    University of California, Lawrence Livermore National Laboratory 
#    under Contract No. W-7405-ENG-48 with the DOE.
# 
# 2. Neither the United States Government nor the University of California 
#    nor any of their employees, makes any warranty, express or implied, 
#    or assumes any liability or responsibility for the accuracy, completeness,
#    or usefulness of any information, apparatus, product, or process disclosed,
#    or represents that its use would not infringe privately-owned rights.
# 
# 3. Also, reference herein to any specific commercial products, process,
#    or services by trade name, trademark, manufacturer or otherwise does not
#    necessarily constitute or imply its endorsement, recommendation, or
#    favoring by the United States Government or the University of California.
#    The views and opinions of authors expressed herein do not necessarily
#    state or reflect those of the United States Government or the University
#    of California, and shall not be used for advertising or product
#    endorsement purposes.
################################################################################


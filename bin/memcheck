#!/bin/sh -f
# **************************************************************************
#  Tool Gear (www.llnl.gov/CASC/tool_gear)
#  Version 2.02                                                 Sept 8, 2006
#  Please see COPYRIGHT AND LICENSE information at the end of this file.
# **************************************************************************
# -----------------------------------------------------------------------
# memcheck: Runs the Valgrind Memcheck tool and MemcheckView on output
#
# Written by John C. Gyllenhaal at LLNL 1/7/05
# Incorporated Julian Seward's valgrind option suggestions 1/11/05
# Please send questions or recommendations to gyllen@llnl.gov.
# -----------------------------------------------------------------------

# Specify the install location for toolgear, if not specified in environment
if [ "$TGROOT" = "" ]; then
    TGROOT="/g/g0/gyllen/svn/toolgear"
else
    echo "Warning: Using Tool Gear built in '$TGROOT'"
fi

# Specify the valgrind to use 
# Requires 3.0.1 or later (valrind xml output support)
#VALGRIND_EXE="/usr/local/tools/valgrind/3.2.0beta/bin/valgrind"
VALGRIND_EXE="valgrind"

# Additional optional valgrind options turned on by default 
# Required valgrind options are below in the invocation command
VALGRIND_OPTIONS="-v --workaround-gcc296-bugs=yes --error-limit=no --leak-check=full --show-reachable=yes"

# Get the valgrind version
VALGRIND_VERSION=`${VALGRIND_EXE} --version`
if [ $? != 0 ]; then
    VALGRIND_VERSION="(Unable to get valgrind version)"
fi

# Print usage
if [ $# -le 0 ]; then
   echo "Usage: memcheck [-nogui] [extra-valgrind-args] command [args]";
   echo " "
   echo "  Runs Valgrind's memory debug tool 'memcheck' on command and unless -nogui"
   echo "  is specified, runs memcheckview (a GUI) on the memcheck output."
   echo "  (E.g., 'memcheck a.out')"
   echo " "
   echo "  For MPI executables run in parallel, use 'memcheck_all' instead of 'memcheck'"
   echo "  To get text output (instead of xml), add '--xml=no' after memcheck"
   echo " "
   echo "  Creates memcheck xml file named executable_name.hostname.#.mc"
   echo " "
   echo "  Valgrind Path:  $VALGRIND_EXE"
   echo "        Version:  $VALGRIND_VERSION"
   echo "   Base Options:  $VALGRIND_OPTIONS"
   echo " "
   echo "  Valgrind documentation, downloads, etc. can be found at valgrind.org"
   echo " "
   echo "  Memcheck's user guide can be found at www.llnl.gov/computing/memcheck"
   echo "  Memcheck (script) is part of Tool Gear 2.02 ( www.llnl.gov/CASC/tool_gear)"
   echo " "
   echo "  Please direct questions, bug reports, and feedback on this memcheck script"
   echo "  to either John Gyllenhaal (gyllen@llnl.gov) or John May (johnmay@llnl.gov)"
   exit 1;
fi

# Default to displaying a GUI
USE_GUI=1

# Detect first argument being '-nogui', which turns off the GUI
# Also allow typo '--nogui'
if [ "$1" = "-nogui" -o  "$1" = "--nogui" ]; then
    # Turn off GUI
    USE_GUI=0

    # Remove -nogui from rest of argument processing
    shift;
fi

# Default to outputing XML, not TEXT
TEXT_OUTPUT=0

# Assume first argument that doesn't start with - is executable name
EXE_NAME=""
for MYARG in "$@"
do
    if [ "$EXE_NAME" = "" ]; then
	case "$MYARG" in
	   --xml=no)
              # Warn users that --xml=no turns off gui
              if [ $USE_GUI -eq 1 ]; then
		  echo " "
		  echo "Warning: --xml=no disables memcheckview GUI which requires xml"
	      fi
	      USE_GUI=0
	      TEXT_OUTPUT=1;;
           -*)
             IGNORE_OPTION=1;;
           *)
             # Use basename to get executable name without path
             EXE_NAME=`basename $MYARG`;
             break;;
        esac
    fi
done

# Make sure we found a executable name
if [ "$EXE_NAME" = "" ]; then
   echo " "
   echo "Error: Unable to find executable name in:"
   echo "      '$@'"
   echo "      Expect at least one argument that doesn't start with '-'"
   echo "Usage: memcheck [extra-valgrind-args] command [args]";
   exit 1;
fi

# Worst case, will use pid to pick output name
MY_PID=$$

# Pass in extra info into valgrind for display, like hostname, start date,
# and MPI rank (if in parallel)
MY_XML_COMMENTS=""

# Get short hostname 
MY_HOSTNAME=`hostname -s`
MY_XML_COMMENTS="${MY_XML_COMMENTS}<hostname>${MY_HOSTNAME}</hostname>"

# Get start date and time
MY_START_DATE=`date`
MY_XML_COMMENTS="${MY_XML_COMMENTS}<date>${MY_START_DATE}</date>"

# Sequence number search variables
RUN_NUMBER=0
ID_OK=0

# First, look for unused number < 100 that can be used instead of pid
while [ $RUN_NUMBER -lt 100 ]
do
  MCOUT="${EXE_NAME}.${HOSTNAME}.${RUN_NUMBER}.mc"
  if [ ! -f $MCOUT ]; then
      ID_OK=1;
      break
  fi
  RUN_NUMBER=`expr $RUN_NUMBER + 1`
done

if [ $ID_OK -eq 0 ]; then
    echo "Warning memcheck name collision: using pid ${MY_PID} instead of sequence number"
    MCOUT="${EXE_NAME}.${HOSTNAME}.${MY_PID}.mc"
fi

# Let user know what is happening
echo "Starting ${VALGRIND_VERSION} Memcheck Tool on ${EXE_NAME}"

# Remove and touch output file so can run 'tail -f like' memcheckview on it
rm -f $MCOUT
TOUCH1=`touch $MCOUT 2>&1`
if [ $? -ne 0 ]; then
     echo "Error: Unable to create valgrind log file '$MCOUT' in"
     echo "  `pwd`"
     echo "  $TOUCH1"
     echo "  Exiting!"
     exit 1;
fi

# Don't start GUI if DISPLAY not set
if [ $USE_GUI -eq 1 -a "$DISPLAY" = "" ]; then
    echo " "
    echo "Warning: DISPLAY not set.   Will not run memcheckview GUI."
    USE_GUI=0
fi

# Start up GUI on output file in background, unless disabled
if [ $USE_GUI -eq 1 ]; then
    echo " "
    echo "Starting Memcheck GUI on Memcheck XML output file in background:"
    echo " " "${TGROOT}/bin/memcheckview $MCOUT &"
    ${TGROOT}/bin/memcheckview $MCOUT &
fi

# Run Valgrind Memcheck on code
echo " "
echo "Starting Valgrind Memcheck tool in foreground:"
echo " " ${VALGRIND_EXE} --tool=memcheck --xml=yes --log-file-exactly=$MCOUT ${VALGRIND_OPTIONS} "$@"
echo " "
${VALGRIND_EXE} --tool=memcheck --xml=yes --log-file-exactly=$MCOUT ${VALGRIND_OPTIONS} "--xml-user-comment=${MY_XML_COMMENTS}" "$@"
VALRET="$?"

echo " "
echo "Valgrind Memcheck Tool run completed, returned $VALRET"

#Tell user that valgrind is done, waiting for GUI, unless disabled
if [ $USE_GUI -eq 1 ]; then
    # Wait for the GUI to finish
    echo "Waiting for user to exit Memcheck GUI..."
    wait 

    echo " "
    echo "Use 'memcheckview ${MCOUT}' to restart GUI on Memcheck output"
    echo " "

# Tweak text for non-gui case
else
    if [ $TEXT_OUTPUT -eq 0 ]; then
	echo " "
	echo "Use 'memcheckview ${MCOUT}' to start GUI on Memcheck output"
	echo " "
    else
	echo " "
	echo "The Valgrind Memcheck text output was written to '${MCOUT}'."
	echo " "	
    fi
	
fi

exit ${VALRET};
################################################################################
# COPYRIGHT AND LICENSE
# 
# Copyright (c) 2006, The Regents of the University of California.
# Produced at the Lawrence Livermore National Laboratory
# Written by John Gyllenhaal (gyllen@llnl.gov), John May (johnmay@llnl.gov),
# and Martin Schulz (schulz6@llnl.gov).
# UCRL-CODE-220834.
# All rights reserved.
# 
# This file is part of Tool Gear.  For details, see www.llnl.gov/CASC/tool_gear.
# 
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
# 
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the disclaimer below.
# 
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the disclaimer (as noted below) in
#   the documentation and/or other materials provided with the distribution.
# 
# * Neither the name of the UC/LLNL nor the names of its contributors may
#   be used to endorse or promote products derived from this software without
#   specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OF THE UNIVERSITY 
# OF CALIFORNIA, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE 
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR 
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# ADDITIONAL BSD NOTICE
# 
# 1. This notice is required to be provided under our contract with the 
#    U.S. Department of Energy (DOE). This work was produced at the 
#    University of California, Lawrence Livermore National Laboratory 
#    under Contract No. W-7405-ENG-48 with the DOE.
# 
# 2. Neither the United States Government nor the University of California 
#    nor any of their employees, makes any warranty, express or implied, 
#    or assumes any liability or responsibility for the accuracy, completeness,
#    or usefulness of any information, apparatus, product, or process disclosed,
#    or represents that its use would not infringe privately-owned rights.
# 
# 3. Also, reference herein to any specific commercial products, process,
#    or services by trade name, trademark, manufacturer or otherwise does not
#    necessarily constitute or imply its endorsement, recommendation, or
#    favoring by the United States Government or the University of California.
#    The views and opinions of authors expressed herein do not necessarily
#    state or reflect those of the United States Government or the University
#    of California, and shall not be used for advertising or product
#    endorsement purposes.
################################################################################


#!/bin/csh -f
# **************************************************************************
#  Tool Gear (www.llnl.gov/CASC/tool_gear)
#  Version 2.02                                                 Sept 8, 2006
#  Please see COPYRIGHT AND LICENSE information at the end of this file.
# **************************************************************************

# Usage: umpireview <excutable-name>

# This script gathers up output files from Umpire (written
# in the Tool Gear XML format) and writes them to a temp
# file.  Then it starts the Tool Gear XML viewer to display
# the data in these files, and it cleans up the temp file
# when the viewer exits.  
# We accept two forms: either the name of the application is
# given after the name of the script, in which case we build
# a list of xml files based on that, or a list of xml files
# is given directly.  The executable name can be given as a
# full path, and this script will separate out the name from
# the directory and find the Umpire files correctly.
# We check for the first case by seeing whether there are
# exactly two arguments, with the second one does NOT ending
# in ".xml".  If that isn't observed, then we look for all
# file names after the script name to end in ".xml"

# Created by John May, 5/6/2005

# Specify the install location for toolgear, if not specified in environment
if ( $?TGROOT ) then
    echo "Warning: Using Tool Gear built in '$TGROOT'"
else
    set TGROOT="/g/g0/gyllen/svn/toolgear"
endif

set argc = ${#argv}
set program = umpireview
set args = "${argv[1-]}"

if ( ${argc} == 0 ) then
  echo "Usage: ${program} umpired-application-name"
  echo "       ${program} umpire-output1.xml umpire-output2.xml ..."
  echo " "
  echo "  Displays a Tool-Gear-based GUI interface for Umpire's xml output files."
  echo "  Umpire is a MPI wrapper library that detects unsafe or erroneous MPI usage"
  echo "  written by Bronis de Supinski, John May, Jeff Vetter, Chris Chambreau,"
  echo "  and Martin Schulz at LLNL."
  echo " "
  echo "  Before using ${program}, link your application with the Umpire library and"
  echo "  then run the umpired-application to generate the Umpire xml output files."
  echo " "
  echo "  ${program} is part of Tool Gear version 2.02"
  echo "  Tool Gear's web site is www.llnl.gov/CASC/tool_gear"
  echo " "
  echo "  Please direct questions, bug reports, and feedback on ${program}"
  echo "  to either John May (johnmay@llnl.gov) or John Gyllenhaal (gyllen@llnl.gov)" 
  exit -1
endif

# Check for first format
if ( ${argc} == 1 && ${args[1]:e} != "xml" ) then
  # Gather a list of output files
  # First get the directory name from the executable
  # name that the user entered.
  set dir = ${args[1]:h}

  # If there was no directory prefix in the name, use the current directory
  if ( ${dir} == ${args[1]} ) then
    set dir = .
  endif

  # Now get the base name of the output files -- the last part of the path
  set base = ${args[1]:t}

  # Get a list of Umpire files that match the template
  set ump_files = `ls ${dir}/Umpire_*.${base}.xml`

  # Warn the user if no files match
  if ( ${#ump_files} == 0 ) then
    echo Error: No files found in $dir matching "Umpire_*.${base}.xml"
    echo Usage: Link your application with the Umpire library
    echo then run it and execute ONE OF:
    echo "    ${program} application-name"
    echo "    ${program} file1.xml file2.xml ..."
    echo ... to view unsafe or erroneous MPI usage that Umpire found
    exit -1
  endif

else
  # Check whether all args end in .xml
  set xmlok = 1
  foreach arg ( ${args} ) 
    if ( ${arg:e} != "xml" ) then
      set xmlok = 0
    endif
  end

  # Command line failed to match either pattern
  if ( $xmlok == 0 ) then
    echo Error: Not all files listed have .xml suffix
    echo Usage: Link your application with the Umpire library
    echo then run it and execute ONE OF:
    echo "    ${program} application-name"
    echo "    ${program} file1.xml file2.xml ..."
    exit -1
  endif

  # If we got here, the list of xml files is OK
  set ump_files = "${args}"
endif

# Define the temporary filename
set TGTMP=tg_umpire_$$.tgui

# Make sure tmp file doesn't exist in cwd!
if ( -f $TGTMP ) then
  echo "Error: ${program} temp file '$TGTMP' already exists, exiting!"
  exit 1
endif

# Create empty temp file for GUI to monitor
set TOUCH1=`touch $TGTMP >& /dev/null`

# If cannot write to current directory, try $TMPDIR, $TMP or /tmp
if ( $status != 0 ) then

  # Use $TMPDIR as prefix, if defined
  if ( $?TMPDIR  ) then
     set TGTMPDIR=${TMPDIR}

  # If $TMPDIR not defined, try $TMP
  else 
    if ( $?TMP ) then
      set TGTMPDIR=${TMP}

    # If neither $TMPDIR or $TMP defined, fall back to /tmp
    else
      set TGTMPDIR="/tmp"
    endif
  endif
 
  # Create new path with the temp dir we found, using basename of TGTMP
  # since user may have used path to input file
  set TGTMPBASE=`basename ${TGTMP}`
  set NEWTGTMP="${TGTMPDIR}/${TGTMPBASE}"

  # Make sure tmp file doesn't already exist for some reason
  if ( -f $NEWTGTMP ) then
    echo "Error: ${program} temp file '$NEWTGTMP' already exists, exiting!"
    exit 1
  endif
  
  # Create empty temp file in $NEWTGTMP for GUI to monitor
  set TOUCH2=`touch $NEWTGTMP >& /dev/null`

  # If it worked creating file in $TGTMPDIR, use that path
  if ( $status == 0 ) then
      set TGTMP="${NEWTGTMP}"

  # Otherwise, punt, failed in two locations.
  else
     echo "Error: Unable to create ${program} temp file '$TGTMP' in"
     echo " " `pwd` "or ${TGTMPDIR}."
     echo "  Exiting!"
     exit 1
  endif
endif


# Remove the file we just touched so we can cat to it
rm -f ${TGTMP}


# Put the header and description in a file.  Also add a fake message
# containing help text
cat > ${TGTMP} << EOF
<tool_gear><format>1</format><version>2.02</version>
<tool_title>Umpire View</tool_title>
<about>
<prepend>
Tool Gear 2.02's Umpire View GUI:
Shows unsafe or erroneous MPI usage detected by the Umpire library
Written (using Tool Gear's XML interface) by John May

The Umpire library was written by
Bronis de Supinski, John May, Jeff Vetter, Chris Chambreau, and Martin Schulz
Lawrence Livermore National Laboratory
</prepend>
</about>
<message_folder>
<tag>help_text</tag>
<title>Click here for a list of errors checked.  See help topics below.</title>
<if_empty>show</if_empty>
</message_folder>
<message>
<folder>help_text</folder>
<heading>How to browse MPI errors</heading>
<body>If an item is grayed out, no errors of that type were found.  For other
items, the number of errors found is listed, and selecting that item will
show each instance of that error in this window.  Clicking on an instance
will show where it happened in the program (if source code is available). 
</body>
</message>
<message>
<folder>help_text</folder>
<heading>About deadlock</heading>
<body>If Umpire detects a deadlock error, other MPI errors may not be reported
reliably because the program will be terminated immediately.   Some errors may
be missed, and correct usage may be reported as an error.  Therefore, you
should recheck the program after all deadlocks have been resolved.
</body>
</message>
EOF

# Get put all the xml files in
cat $ump_files >> ${TGTMP}

# Add the closing tag

cat >> ${TGTMP} << EOF
</tool_gear>
EOF

# View it and immediately unlink it upon openning
${TGROOT}/bin/TGui ${TGTMP} -unlink

# All done; remove the temp file if it still there
rm -f ${TGTMP}

exit 0
################################################################################
# COPYRIGHT AND LICENSE
# 
# Copyright (c) 2006, The Regents of the University of California.
# Produced at the Lawrence Livermore National Laboratory
# Written by John Gyllenhaal (gyllen@llnl.gov), John May (johnmay@llnl.gov),
# and Martin Schulz (schulz6@llnl.gov).
# UCRL-CODE-220834.
# All rights reserved.
# 
# This file is part of Tool Gear.  For details, see www.llnl.gov/CASC/tool_gear.
# 
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
# 
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the disclaimer below.
# 
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the disclaimer (as noted below) in
#   the documentation and/or other materials provided with the distribution.
# 
# * Neither the name of the UC/LLNL nor the names of its contributors may
#   be used to endorse or promote products derived from this software without
#   specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OF THE UNIVERSITY 
# OF CALIFORNIA, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE 
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR 
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# ADDITIONAL BSD NOTICE
# 
# 1. This notice is required to be provided under our contract with the 
#    U.S. Department of Energy (DOE). This work was produced at the 
#    University of California, Lawrence Livermore National Laboratory 
#    under Contract No. W-7405-ENG-48 with the DOE.
# 
# 2. Neither the United States Government nor the University of California 
#    nor any of their employees, makes any warranty, express or implied, 
#    or assumes any liability or responsibility for the accuracy, completeness,
#    or usefulness of any information, apparatus, product, or process disclosed,
#    or represents that its use would not infringe privately-owned rights.
# 
# 3. Also, reference herein to any specific commercial products, process,
#    or services by trade name, trademark, manufacturer or otherwise does not
#    necessarily constitute or imply its endorsement, recommendation, or
#    favoring by the United States Government or the University of California.
#    The views and opinions of authors expressed herein do not necessarily
#    state or reflect those of the United States Government or the University
#    of California, and shall not be used for advertising or product
#    endorsement purposes.
################################################################################


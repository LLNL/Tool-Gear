#!/bin/sh -f
# **************************************************************************
#  Tool Gear (www.llnl.gov/CASC/tool_gear)
#  Version 2.00                                               March 29, 2006
#  Please see COPYRIGHT AND LICENSE information at the end of this file.
# **************************************************************************
# Installs links in the TARGET_DIR to tools that appear to be actually built.
#
# You can also just manually link to the scripts in the bin dir, if you wish.
# The install script patches the scripts assuming that you will not delete
# the build_dir's bin directory.   You can delete the src directory, 
# if desired.
# Written by John Gyllenhaal 3/21/06 

# Typically /usr/local/bin, must not be the build/bin directory
TARGET_DIR=/usr/local/bin

# Get the install script name, use basename to strip off path
INSTALL_SCRIPT=`basename $0`

# Get the current directory 
CUR_DIR=`pwd`

echo "Running Install script '$INSTALL_SCRIPT' in '${CUR_DIR}'"
echo " "

# Make sure run from bin directory
if [ ! -f ${INSTALL_SCRIPT} ]; then
	echo " "
	echo "Error: The ${INSTALL_SCRIPT} script must be run from the build's bin directory."
	echo "$0 aborting..."
	echo " "
	exit 1;
fi

# Make sure TARGET_DIR exists
if [ ! -d "${TARGET_DIR}" ]; then
	echo "Error: TARGET_DIR '$TARGET_DIR' doesn't exist."
	echo "$0 aborting..."
	exit 1;
fi


# Make sure TARGET_DIR is not the build/bin directory
if [ -f "${TARGET_DIR}/${INSTALL_SCRIPT}" ]; then
	echo "Error: Didn't expect to find ${INSTALL_SCRIPT} in TARGET_DIR"
	echo "       Make sure TARGET_DIR (${TARGET_DIR}) is not alias for"
	echo "      " `pwd`
	echo " "
	echo "       TARGET_DIR must not point to build_dir/bin"
	echo "$0 aborting..."
	echo " "
	exit 1;
fi

# Attempt to install link to mpipview if present
if [ -x ./mpipview ]; then
	# Only install if all required files are built
	if [ -x ./TGmpip2xml -a \
	     -x ./TGclient -a \
	     -x ./TGui -a \
	     -x ./TGxmlserver ]; then
		echo "Installing mpipview in '$TARGET_DIR'"
		set -x
		ln -sf ${CUR_DIR}/mpipview ${TARGET_DIR}/mpipview
	        set +x
		echo " "
	else
		echo "Warning:  Unable to install mpipview!"
	        echo "          Some required components have not been built."
	        echo " "
	fi
fi

# Attempt to install link to memcheckview if present
if [ -x ./memcheckview ]; then
	# Only install if all required files are built
	if [ -x ./TGmemcheck2xml -a \
	     -x ./TGclient -a \
	     -x ./TGui -a \
	     -x ./TGxmlserver ]; then
		echo "Installing memcheckview in '$TARGET_DIR'"
		set -x
		ln -sf ${CUR_DIR}/memcheckview ${TARGET_DIR}/memcheckview
	        set +x
		echo " "
	else
		echo "Warning:  Unable to install memcheckview!"
	        echo "          Some required components have not been built."
	        echo " "
	fi
fi

# Attempt to install link to memcheck if present
if [ -x ./memcheck ]; then
	# Only install if all required files are built
	if [ -x ./memcheckview -a \
	     -x ./TGmemcheck2xml -a \
	     -x ./TGclient -a \
	     -x ./TGui -a \
	     -x ./TGxmlserver ]; then
		echo "Installing memcheck in '$TARGET_DIR'"
		set -x
		ln -sf ${CUR_DIR}/memcheck ${TARGET_DIR}/memcheck
	        set +x
		echo " "
	else
		echo "Warning:  Unable to install memcheck!"
	        echo "          Some required components have not been built."
	        echo " "
	fi
fi

# Attempt to install link to memcheck_all if present
if [ -x ./memcheck_all ]; then
	# Only install if all required files are built
	if [ -x ./memcheckview -a \
	     -x ./TGmemcheck2xml -a \
	     -x ./TGclient -a \
	     -x ./TGui -a \
	     -x ./TGxmlserver ]; then
           # if srun (from SLURM, www.llnl.gov/linux/slurm) is not on their 
           # system, warn about what changes need to be made and don't install
           SRUN_VER=`srun --version`
           SRUN_RET=$?
           if [ "$SRUN_RET" -eq "0" ]; then
		echo "Installing memcheck_all in '$TARGET_DIR'"
		set -x
		ln -sf ${CUR_DIR}/memcheck_all ${TARGET_DIR}/memcheck_all
	        set +x
		echo " "
           else
                echo "Warning: memcheck_all (runs valgrind memcheck on MPI programs) needs to be"
		
                echo "         modified if you want to use it on clusters using a parallel launcher"
                echo "         different from 'srun' (from slurm, www.llnl.gov/linux/slurm)."
                echo " "
                echo "         To modify memcheck_all to work with a different parallel launcher,"
		echo "         you need to change RMS_RANK to the environment variable holding the"
		echo "         MPI rank of each task and SLURM_JOBID to something identifying"
                echo "         the parallel run (ideally a job id)."
                echo " "
                echo "         NOTE: If you don't want to run valgrind on MPI programs, you don't"
                echo "         need to install memcheck_all."
                echo " "
		echo "         NOTE: memcheck_all NOT installed by install_links!"
                echo "         To manually install memcheck_all(i.e., after modifying it) , run:"
		echo "  ln -sf ${CUR_DIR}/memcheck_all ${TARGET_DIR}/memcheck_all"
                echo " "
           fi
	else
		echo "Warning:  Unable to install memcheck_all!"
	        echo "          Some required components have not been built."
	        echo " "
	fi
fi

# Attempt to install link to umpireview if present
if [ -x ./umpireview ]; then
	# Only install if all required files are built
	if [ -x ./TGclient -a \
	     -x ./TGui -a \
	     -x ./TGxmlserver ]; then
		echo "Installing umpireview in '$TARGET_DIR'"
		set -x
		ln -sf ${CUR_DIR}/umpireview ${TARGET_DIR}/umpireview
	        set +x
		echo " "
	else
		echo "Warning:  Unable to install umpireview!"
	        echo "          Some required components have not been built."
	        echo " "
	fi
fi

# Attempt to install link to dyntg if present
if [ -x ./dyntg ]; then
        # Only install on AIX for now
        if [ "`uname`" != "AIX" ]; then
                echo "Warning: Skipping dyntg, AIX currently required for installing dyntg!"
	        echo " "
	# Only install if all required files are built
	elif [ -x ./TGclient -a \
	     -x ./dpclcol -a \
	     -d ../dynTG_extensions ]; then
		echo "Installing dyntg in '$TARGET_DIR'"
		set -x
		ln -sf ${CUR_DIR}/dyntg ${TARGET_DIR}/dyntg
	        set +x
		echo " "
	else
		echo "Warning:  Unable to install dyntg!"
	        echo "          Some required components have not been built."
	        echo " "
	fi
fi

################################################################################
# COPYRIGHT AND LICENSE
# 
# Copyright (c) 2006, The Regents of the University of California.
# Produced at the Lawrence Livermore National Laboratory
# Written by John Gyllenhaal (gyllen@llnl.gov), John May (johnmay@llnl.gov),
# and Martin Schulz (schulz6@llnl.gov).
# UCRL-CODE-220834.
# All rights reserved.
# 
# This file is part of Tool Gear.  For details, see www.llnl.gov/CASC/tool_gear.
# 
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
# 
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the disclaimer below.
# 
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the disclaimer (as noted below) in
#   the documentation and/or other materials provided with the distribution.
# 
# * Neither the name of the UC/LLNL nor the names of its contributors may
#   be used to endorse or promote products derived from this software without
#   specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OF THE UNIVERSITY 
# OF CALIFORNIA, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE 
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR 
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# ADDITIONAL BSD NOTICE
# 
# 1. This notice is required to be provided under our contract with the 
#    U.S. Department of Energy (DOE). This work was produced at the 
#    University of California, Lawrence Livermore National Laboratory 
#    under Contract No. W-7405-ENG-48 with the DOE.
# 
# 2. Neither the United States Government nor the University of California 
#    nor any of their employees, makes any warranty, express or implied, 
#    or assumes any liability or responsibility for the accuracy, completeness,
#    or usefulness of any information, apparatus, product, or process disclosed,
#    or represents that its use would not infringe privately-owned rights.
# 
# 3. Also, reference herein to any specific commercial products, process,
#    or services by trade name, trademark, manufacturer or otherwise does not
#    necessarily constitute or imply its endorsement, recommendation, or
#    favoring by the United States Government or the University of California.
#    The views and opinions of authors expressed herein do not necessarily
#    state or reflect those of the United States Government or the University
#    of California, and shall not be used for advertising or product
#    endorsement purposes.
################################################################################

